<?php
/**
 * AssignmentData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * AssignmentData Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AssignmentData implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'assignment_title' => 'string',
        'assignment_instructions' => 'string',
        'assignment_exclude_quotes' => 'bool',
        'assignment_due_date' => 'int',
        'assignment_grade' => 'int',
        'assignment_attachment_external_content' => '\Swagger\Client\Model\ExternalContentData[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'assignment_title' => 'assignmentTitle',
        'assignment_instructions' => 'assignmentInstructions',
        'assignment_exclude_quotes' => 'assignmentExcludeQuotes',
        'assignment_due_date' => 'assignmentDueDate',
        'assignment_grade' => 'assignmentGrade',
        'assignment_attachment_external_content' => 'assignmentAttachmentExternalContent'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'assignment_title' => 'setAssignmentTitle',
        'assignment_instructions' => 'setAssignmentInstructions',
        'assignment_exclude_quotes' => 'setAssignmentExcludeQuotes',
        'assignment_due_date' => 'setAssignmentDueDate',
        'assignment_grade' => 'setAssignmentGrade',
        'assignment_attachment_external_content' => 'setAssignmentAttachmentExternalContent'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'assignment_title' => 'getAssignmentTitle',
        'assignment_instructions' => 'getAssignmentInstructions',
        'assignment_exclude_quotes' => 'getAssignmentExcludeQuotes',
        'assignment_due_date' => 'getAssignmentDueDate',
        'assignment_grade' => 'getAssignmentGrade',
        'assignment_attachment_external_content' => 'getAssignmentAttachmentExternalContent'
    );
  
    
    /**
      * $assignment_title The title of the assignment
      * @var string
      */
    protected $assignment_title;
    
    /**
      * $assignment_instructions Instructions for assignment
      * @var string
      */
    protected $assignment_instructions;
    
    /**
      * $assignment_exclude_quotes exclude quotes
      * @var bool
      */
    protected $assignment_exclude_quotes;
    
    /**
      * $assignment_due_date Assignment due date. Pass in 0 to delete.
      * @var int
      */
    protected $assignment_due_date;
    
    /**
      * $assignment_grade Assignment grade. Pass in 0 to delete.
      * @var int
      */
    protected $assignment_grade;
    
    /**
      * $assignment_attachment_external_content 
      * @var \Swagger\Client\Model\ExternalContentData[]
      */
    protected $assignment_attachment_external_content;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->assignment_title = $data["assignment_title"];
            $this->assignment_instructions = $data["assignment_instructions"];
            $this->assignment_exclude_quotes = $data["assignment_exclude_quotes"];
            $this->assignment_due_date = $data["assignment_due_date"];
            $this->assignment_grade = $data["assignment_grade"];
            $this->assignment_attachment_external_content = $data["assignment_attachment_external_content"];
        }
    }
    
    /**
     * Gets assignment_title
     * @return string
     */
    public function getAssignmentTitle()
    {
        return $this->assignment_title;
    }
  
    /**
     * Sets assignment_title
     * @param string $assignment_title The title of the assignment
     * @return $this
     */
    public function setAssignmentTitle($assignment_title)
    {
        
        $this->assignment_title = $assignment_title;
        return $this;
    }
    
    /**
     * Gets assignment_instructions
     * @return string
     */
    public function getAssignmentInstructions()
    {
        return $this->assignment_instructions;
    }
  
    /**
     * Sets assignment_instructions
     * @param string $assignment_instructions Instructions for assignment
     * @return $this
     */
    public function setAssignmentInstructions($assignment_instructions)
    {
        
        $this->assignment_instructions = $assignment_instructions;
        return $this;
    }
    
    /**
     * Gets assignment_exclude_quotes
     * @return bool
     */
    public function getAssignmentExcludeQuotes()
    {
        return $this->assignment_exclude_quotes;
    }
  
    /**
     * Sets assignment_exclude_quotes
     * @param bool $assignment_exclude_quotes exclude quotes
     * @return $this
     */
    public function setAssignmentExcludeQuotes($assignment_exclude_quotes)
    {
        
        $this->assignment_exclude_quotes = $assignment_exclude_quotes;
        return $this;
    }
    
    /**
     * Gets assignment_due_date
     * @return int
     */
    public function getAssignmentDueDate()
    {
        return $this->assignment_due_date;
    }
  
    /**
     * Sets assignment_due_date
     * @param int $assignment_due_date Assignment due date. Pass in 0 to delete.
     * @return $this
     */
    public function setAssignmentDueDate($assignment_due_date)
    {
        
        $this->assignment_due_date = $assignment_due_date;
        return $this;
    }
    
    /**
     * Gets assignment_grade
     * @return int
     */
    public function getAssignmentGrade()
    {
        return $this->assignment_grade;
    }
  
    /**
     * Sets assignment_grade
     * @param int $assignment_grade Assignment grade. Pass in 0 to delete.
     * @return $this
     */
    public function setAssignmentGrade($assignment_grade)
    {
        
        $this->assignment_grade = $assignment_grade;
        return $this;
    }
    
    /**
     * Gets assignment_attachment_external_content
     * @return \Swagger\Client\Model\ExternalContentData[]
     */
    public function getAssignmentAttachmentExternalContent()
    {
        return $this->assignment_attachment_external_content;
    }
  
    /**
     * Sets assignment_attachment_external_content
     * @param \Swagger\Client\Model\ExternalContentData[] $assignment_attachment_external_content 
     * @return $this
     */
    public function setAssignmentAttachmentExternalContent($assignment_attachment_external_content)
    {
        
        $this->assignment_attachment_external_content = $assignment_attachment_external_content;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
